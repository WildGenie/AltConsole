Current rough Architecture:

InputOutputBufferHandler 
	BufferProvider  - (Wraps the external service)
		IExternalService (Console)
			
	InputHandler (Provides input from UI)
		WPF Input Control
			ConsoleDisplay Canvas?

FixedDimensionsDisplayViewModel
	InputOutputBufferHandler

ConsoleDisplay : UserControl  (UI Element)
	DataContext = InstanceOf(FixedDimensionsDisplayViewModel)


Thoughts/Future/New arch?

Command = CommandInterpreter
Command -> Switch BufferProvider/InputHandler for duration of execution

cd
dir
pipe to other process


Two modes - 1. Command Interpreter mode
			2. Running Program mode

ConsoleModeHandler
		handle input/output to InputOutputBuffer

-- CommandInterpreter
		AutoComplete
		CommandParser
		??

-- RunProgram
		Redirect Output/Input
		???

Right now input is only sent to the external process on newline. This will need to change.  
Output will need to modify the input somehow!!

- Maybe make a new interface for a 'smarter' console processor?
	- maybe allow this Processor to modify the Input buffer
	

Selection handler on the display
	Selection
	Should handle Ctrl+<key>  ie. ctrl+c  should close current process
	Colors
